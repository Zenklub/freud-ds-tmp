"use strict";(self.webpackChunk_freud_ds_web=self.webpackChunk_freud_ds_web||[]).push([[1858],{"./stories/forms/cascade-select/cascade-select.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{_BGColor_:()=>_BGColor_,_Default_:()=>_Default_,_Disabled_:()=>_Disabled_,_Invalid_:()=>_Invalid_,__namedExportsOrder:()=>cascade_select_stories_namedExportsOrder,default:()=>cascade_select_stories});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),angular_dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),public_api=__webpack_require__("./projects/web-components/src/public-api.ts"),header_component=__webpack_require__("./stories/header/header.component.tsx"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");const items=[{name:"Australia",code:"AU",states:[{name:"New South Wales",cities:[{cname:"Sydney",code:"A-SY"},{cname:"Newcastle",code:"A-NE"},{cname:"Wollongong",code:"A-WO"}]},{name:"Queensland",cities:[{cname:"Brisbane",code:"A-BR"},{cname:"Townsville",code:"A-TO"}]}]},{name:"Canada",code:"CA",states:[{name:"Quebec",cities:[{cname:"Montreal",code:"C-MO"},{cname:"Quebec City",code:"C-QU"}]},{name:"Ontario",cities:[{cname:"Ottawa",code:"C-OT"},{cname:"Toronto",code:"C-TO"}]}]},{name:"United States",code:"US",states:[{name:"California",cities:[{cname:"Los Angeles",code:"US-LA"},{cname:"San Diego",code:"US-SD"},{cname:"San Francisco",code:"US-SF"}]},{name:"Florida",cities:[{cname:"Jacksonville",code:"US-JA"},{cname:"Miami",code:"US-MI"},{cname:"Tampa",code:"US-TA"},{cname:"Orlando",code:"US-OR"}]},{name:"Texas",cities:[{cname:"Austin",code:"US-AU"},{cname:"Dallas",code:"US-DA"},{cname:"Houston",code:"US-HO"}]}]}],Template=args=>({props:{...args},template:'\n    <div style="height: 250px">\n        <freud-cascade-select\n          [(ngModel)]="value"\n          [disabled]="disabled"\n          [label]="label"\n          [options]="options"\n          [optionLabel]="\'cname\'"\n          [optionValue]="\'code\'"\n          [placeholder]="placeholder"\n          [optionGroupLabel]="\'name\'"\n          [optionGroupChildren]="[\'states\', \'cities\']"\n          [helpText]="helpText"\n          [invalid]="invalid"\n          [bgColor]="bgColor">\n      </freud-cascade-select>\n    </div>\n'}),Default=Template.bind({});Default.args={label:"Label",value:"",placeholder:"Placeholder",options:items};const BGColor=Template.bind({});BGColor.args={label:"Label",placeholder:"Placeholder",bgColor:!0,helpText:"Helper Text",options:items};const Disabled=Template.bind({});Disabled.args={label:"Label",disabled:!0,options:items};const Invalid=Template.bind({});Invalid.args={label:"Label",placeholder:"Placeholder",invalid:!0,options:items};(0,angular_dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(animations.BrowserAnimationsModule)]});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",h3:"h3"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{decorators:[(0,angular_dist.moduleMetadata)({imports:[public_api.wn]})],parameters:{layout:"centered",backgrounds:{default:"Default",values:[{name:"Default",value:"#FFFFFF"},{name:"BgColor",value:"#6732D1"}]}},title:"@freud-ds/web-components/Forms/CascadeSelect",component:public_api.jW}),"\n",(0,jsx_runtime.jsx)(header_component.z,{title:"CascadeSelect",description:"Permite a pessoa usuária escolher uma opção dentro de uma lista já pré-definida em forma de cascata."}),"\n",(0,jsx_runtime.jsxs)(_components.h2,{id:"import",children:[(0,jsx_runtime.jsx)("a",{id:"importing"}),"Import"]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-ts",children:"import { FreudCascadeSelectModule } from '@freud-ds/web-components';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["CascadeSelect requer um valor para vincular e uma coleção de objetos arbitrários com uma hierarquia aninhada.\n",(0,jsx_runtime.jsx)(_components.code,{children:"optionGroupLabel"})," é usado para o texto de uma categoria e ",(0,jsx_runtime.jsx)(_components.code,{children:"optionGroupChildren"})," é para definir os filhos da categoria.\nObserve que a ordem de ",(0,jsx_runtime.jsx)(_components.code,{children:"optionGroupChildren"})," é importante e deve corresponder à hierarquia de dados."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<freud-cascade-select\n  [(ngModel)]="selectedCity"\n  [options]="countries"\n  optionLabel="cname"\n  optionGroupLabel="name"\n  [optionGroupChildren]="[\'states\', \'cities\']"\n  [style]="{\'minWidth\': \'14rem\'}"\n>\n</freud-cascade-select>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-ts",children:"countries: any[\n  {\n    name: 'Australia',\n    code: 'AU',\n    states: [\n      {\n        name: 'New South Wales',\n        cities: [\n          { cname: 'Sydney', code: 'A-SY' },\n          { cname: 'Newcastle', code: 'A-NE' },\n          { cname: 'Wollongong', code: 'A-WO' },\n        ],\n      },\n      {\n        name: 'Queensland',\n        cities: [\n          { cname: 'Brisbane', code: 'A-BR' },\n          { cname: 'Townsville', code: 'A-TO' },\n        ],\n      },\n    ],\n  }\n];\n\nselectedCity: any;\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.h2,{id:"exemplos",children:[(0,jsx_runtime.jsx)("a",{id:"exemplos"}),"Exemplos"]}),"\n",(0,jsx_runtime.jsx)("br",{}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default",children:"Default"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:Default})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"invalid",children:"Invalid"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:Invalid})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled",children:"Disabled"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:Disabled})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"bg-color",children:"BG Color"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{style:{backgroundColor:"#241249"},children:(0,jsx_runtime.jsx)(dist.oG,{story:BGColor})}),"\n",(0,jsx_runtime.jsxs)(_components.h2,{id:"api",children:[(0,jsx_runtime.jsx)("a",{id:"api"}),"API"]}),"\n",(0,jsx_runtime.jsx)(dist.Ed,{of:public_api.jW})]})}const _Default_=Default,_Invalid_=Invalid,_Disabled_=Disabled,_BGColor_=BGColor,componentMeta={title:"@freud-ds/web-components/Forms/CascadeSelect",parameters:{layout:"centered",backgrounds:{default:"Default",values:[{name:"Default",value:"#FFFFFF"},{name:"BgColor",value:"#6732D1"}]}},decorators:[(0,angular_dist.moduleMetadata)({imports:[public_api.wn]})],component:public_api.jW,tags:["stories-mdx"],includeStories:["_Default_","_Invalid_","_Disabled_","_BGColor_"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const cascade_select_stories=componentMeta,cascade_select_stories_namedExportsOrder=["_Default_","_Invalid_","_Disabled_","_BGColor_"]}}]);