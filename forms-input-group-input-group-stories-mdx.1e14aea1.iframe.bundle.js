"use strict";(self.webpackChunk_freud_ds_web=self.webpackChunk_freud_ds_web||[]).push([[4285],{"./stories/forms/input-group/input-group.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{_BGColor_:()=>_BGColor_,_CheckboxAndText_:()=>_CheckboxAndText_,_IconAndRadio_:()=>_IconAndRadio_,_IconLeft_:()=>_IconLeft_,_IconRight_:()=>_IconRight_,_RadioAndButton_:()=>_RadioAndButton_,__namedExportsOrder:()=>input_group_stories_namedExportsOrder,default:()=>input_group_stories});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),angular_dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),public_api=__webpack_require__("./projects/web-components/src/public-api.ts"),header_component=__webpack_require__("./stories/header/header.component.tsx");const IconLeft=(args=>({props:{...args},template:'\n    <div class="freud-input-group">\n      <span class="freud-input-group-addon"><i class="freud-icon freud-icon-user"></i></span>\n      <freud-input-text placeholder="Username"></freud-input-text>\n    </div>\n  '})).bind({}),IconRight=(args=>({props:{...args},template:'\n    <div class="freud-input-group">\n      <freud-input-text placeholder="Username"></freud-input-text>\n      <span class="freud-input-group-addon"><i class="freud-icon freud-icon-user"></i></span>\n    </div>\n  '})).bind({}),IconAndRadio=(args=>({props:{...args},template:'\n    <div class="freud-input-group">\n      <span class="freud-input-group-addon"><i class="freud-icon freud-icon-user"></i></span>\n      <freud-input-text placeholder="Username"></freud-input-text>\n      <span class="freud-input-group-addon">\n        <freud-radio-button radioValue="teste" name="item"></freud-radio-button>\n      </span>\n    </div>\n  '})).bind({}),TemplateRadioAndButton=args=>({props:{...args},template:'\n    <div class="freud-input-group">\n      <span class="freud-input-group-addon">\n        <freud-radio-button radioValue="teste" name="item2"></freud-radio-button>\n      </span>\n      <freud-input-text placeholder="Username"></freud-input-text>\n      <freud-button>Button</freud-button>\n    </div>\n  '}),RadioAndButton=TemplateRadioAndButton.bind({}),BGColor=TemplateRadioAndButton.bind({}),CheckboxAndText=(args=>({props:{...args},template:'\n    <div class="freud-input-group">\n      <span class="freud-input-group-addon">\n        <freud-checkbox></freud-checkbox>\n      </span>\n      <freud-input-text placeholder="Username"></freud-input-text>\n      <span class="freud-input-group-addon">ww</span>\n    </div>\n  '})).bind({});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h2:"h2",p:"p",code:"code",h3:"h3"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{decorators:[(0,angular_dist.moduleMetadata)({imports:[public_api.Jw,public_api.v7,public_api.ZM,public_api.Jr]})],parameters:{layout:"centered",viewMode:"docs",previewTabs:{canvas:{hidden:!0}},backgrounds:{default:"Default",values:[{name:"Default",value:"#FFFFFF"},{name:"BgColor",value:"#6732D1"}]}},title:"@freud-ds/web-components/Forms/InputGroup",component:public_api.Iz}),"\n",(0,jsx_runtime.jsx)(header_component.z,{title:"Input Group",description:"Texto, ícone, botões e outros conteúdos podem ser agrupados ao lado de input de entrada."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Utilize a classe ",(0,jsx_runtime.jsx)(_components.code,{children:"freud-input-group"})," e ",(0,jsx_runtime.jsx)(_components.code,{children:"freud-input-group-addon"})," para montar um agrupamento personalizado entre input e botões, icones e outros"]}),"\n",(0,jsx_runtime.jsxs)(_components.h2,{id:"exemplos",children:[(0,jsx_runtime.jsx)("a",{id:"exemplos"}),"Exemplos"]}),"\n",(0,jsx_runtime.jsx)("br",{}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"iconleft",children:"IconLeft"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:IconLeft})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"iconright",children:"IconRight"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:IconRight})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"radioandbutton",children:"RadioAndButton"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:RadioAndButton})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"iconandradio",children:"IconAndRadio"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:IconAndRadio})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"checkboxandtext",children:"CheckboxAndText"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:CheckboxAndText})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"bg-color",children:"BG Color"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{style:{backgroundColor:"#241249"},children:(0,jsx_runtime.jsx)(dist.oG,{story:BGColor})})]})}const _IconLeft_=IconLeft,_IconRight_=IconRight,_RadioAndButton_=RadioAndButton,_IconAndRadio_=IconAndRadio,_CheckboxAndText_=CheckboxAndText,_BGColor_=BGColor,componentMeta={title:"@freud-ds/web-components/Forms/InputGroup",parameters:{layout:"centered",viewMode:"docs",previewTabs:{canvas:{hidden:!0}},backgrounds:{default:"Default",values:[{name:"Default",value:"#FFFFFF"},{name:"BgColor",value:"#6732D1"}]}},decorators:[(0,angular_dist.moduleMetadata)({imports:[public_api.Jw,public_api.v7,public_api.ZM,public_api.Jr]})],component:public_api.Iz,tags:["stories-mdx"],includeStories:["_IconLeft_","_IconRight_","_RadioAndButton_","_IconAndRadio_","_CheckboxAndText_","_BGColor_"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const input_group_stories=componentMeta,input_group_stories_namedExportsOrder=["_IconLeft_","_IconRight_","_RadioAndButton_","_IconAndRadio_","_CheckboxAndText_","_BGColor_"]}}]);