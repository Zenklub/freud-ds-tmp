"use strict";(self.webpackChunk_freud_ds_web=self.webpackChunk_freud_ds_web||[]).push([[2326],{"./stories/forms/input-mask/input-mask.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{_BGColor_:()=>_BGColor_,_CPF_:()=>_CPF_,_Celular_:()=>_Celular_,_Data_:()=>_Data_,_Telefone_:()=>_Telefone_,__namedExportsOrder:()=>input_mask_stories_namedExportsOrder,default:()=>input_mask_stories});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),angular_dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),public_api=__webpack_require__("./projects/web-components/src/public-api.ts"),header_component=__webpack_require__("./stories/header/header.component.tsx");const Template=args=>({props:{...args},template:'\n    <freud-input-mask\n        [(ngModel)]="value"\n        [disabled]="disabled"\n        [label]="label"\n        [placeholder]="placeholder"\n        [helpText]="helpText"\n        [invalid]="invalid"\n        [mask]="mask"\n        [bgColor]="bgColor">\n    </freud-input-mask>\n'}),Data=Template.bind({});Data.args={label:"Label",value:"",mask:"99/99/9999"};const CPF=Template.bind({});CPF.args={label:"Label",value:"",mask:"999.999.999-99"};const Celular=Template.bind({});Celular.args={label:"Label",value:"",mask:"(99) 9 9999-9999"};const Telefone=Template.bind({});Telefone.args={label:"Label",value:"",mask:"(99) 9999-9999"};const BGColor=Template.bind({});BGColor.args={label:"Label",placeholder:"Placeholder",bgColor:!0,mask:"99/99/9999"};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code",h3:"h3",p:"p",ul:"ul",li:"li"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{decorators:[(0,angular_dist.moduleMetadata)({imports:[public_api.YW]})],parameters:{layout:"centered",backgrounds:{default:"Default",values:[{name:"Default",value:"#FFFFFF"},{name:"BgColor",value:"#6732D1"}]}},title:"@freud-ds/web-components/Forms/InputMask",component:public_api.jN}),"\n",(0,jsx_runtime.jsx)(header_component.z,{title:"Input Mask",description:"O componente InputMask é usado para inserir entrada em um determinado formato, como numérico, data, moeda e telefone."}),"\n",(0,jsx_runtime.jsxs)(_components.h2,{id:"import",children:[(0,jsx_runtime.jsx)("a",{id:"importing"}),"Import"]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-ts",children:"import { FreudInputMaskModule } from '@freud-ds/web-components';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"mask",children:"Mask"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"O formato da máscara pode ser uma combinação das seguintes definições integradas."}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"a - Alfa caracteres (padrão: A-Z,a-z)"}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"9 - Números (0-9)"}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:["\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:["\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"Alfa númerico caracteres (A-Z,a-z,0-9)"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<freud-input-mask [(ngModel)]="val" mask="a*-999-a999"></freud-input-mask>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Você também pode definir seu próprio padrão regex para caracteres alfa"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<freud-input-mask\n  formControlName="username"\n  mask="(999) 999-9999? x99999"\n></freud-input-mask>\n'})}),"\n",(0,jsx_runtime.jsxs)(_components.h2,{id:"exemplos",children:[(0,jsx_runtime.jsx)("a",{id:"exemplos"}),"Exemplos"]}),"\n",(0,jsx_runtime.jsx)("br",{}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"data",children:"Data"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:Data})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"cpf",children:"CPF"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:CPF})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"celular",children:"Celular"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:Celular})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"telefone",children:"Telefone"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:Telefone})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"bg-color",children:"BG Color"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{style:{backgroundColor:"#241249"},children:(0,jsx_runtime.jsx)(dist.oG,{story:BGColor})}),"\n",(0,jsx_runtime.jsxs)(_components.h2,{id:"api",children:[(0,jsx_runtime.jsx)("a",{id:"api"}),"API"]}),"\n",(0,jsx_runtime.jsx)(dist.Ed,{of:public_api.jN})]})}const _Data_=Data,_CPF_=CPF,_Celular_=Celular,_Telefone_=Telefone,_BGColor_=BGColor,componentMeta={title:"@freud-ds/web-components/Forms/InputMask",parameters:{layout:"centered",backgrounds:{default:"Default",values:[{name:"Default",value:"#FFFFFF"},{name:"BgColor",value:"#6732D1"}]}},decorators:[(0,angular_dist.moduleMetadata)({imports:[public_api.YW]})],component:public_api.jN,tags:["stories-mdx"],includeStories:["_Data_","_CPF_","_Celular_","_Telefone_","_BGColor_"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const input_mask_stories=componentMeta,input_mask_stories_namedExportsOrder=["_Data_","_CPF_","_Celular_","_Telefone_","_BGColor_"]}}]);