"use strict";(self.webpackChunk_freud_ds_web=self.webpackChunk_freud_ds_web||[]).push([[3229],{"./stories/forms/listbox/listbox.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{_BGColor_:()=>_BGColor_,_CheckboxAndFilter_:()=>_CheckboxAndFilter_,_Checkbox_:()=>_Checkbox_,_Default_:()=>_Default_,_Disabled_:()=>_Disabled_,_Filter_:()=>_Filter_,__namedExportsOrder:()=>listbox_stories_namedExportsOrder,default:()=>listbox_stories});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),angular_dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),public_api=__webpack_require__("./projects/web-components/src/public-api.ts"),header_component=__webpack_require__("./stories/header/header.component.tsx"),animations=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/animations.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");const items=[{name:"New York",code:"NY"},{name:"Rome",code:"RM",disabled:!0},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"}],Template=args=>({props:{...args},template:'\n    <div style="height: 250px">\n        <freud-listbox\n          [(ngModel)]="value"\n          [disabled]="disabled"\n          [options]="options"\n          [multiple]="multiple"\n          [filter]="filter"\n          [checkbox]="checkbox"\n          [optionLabel]="optionLabel"\n          [optionValue]="optionValue"\n          [invalid]="invalid">\n      </freud-listbox>\n    </div>\n'}),Default=Template.bind({});Default.args={value:"",options:items,optionLabel:"name",optionValue:"code"};const Filter=Template.bind({});Filter.args={options:items,optionLabel:"name",multiple:!0,filter:!0};const BGColor=Template.bind({});BGColor.args={options:items,optionLabel:"name",optionValue:"code"};const Disabled=Template.bind({});Disabled.args={disabled:!0,options:items,optionLabel:"name",optionValue:"code"};const Checkbox=Template.bind({});Checkbox.args={options:items,optionLabel:"name",optionValue:"code",checkbox:!0,multiple:!0};const CheckboxAndFilter=Template.bind({});CheckboxAndFilter.args={options:items,optionLabel:"name",optionValue:"code",checkbox:!0,multiple:!0,filter:!0};(0,angular_dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(animations.BrowserAnimationsModule)]});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code",p:"p",h3:"h3"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{decorators:[(0,angular_dist.moduleMetadata)({imports:[public_api.Dv]})],parameters:{layout:"centered",backgrounds:{default:"Default",values:[{name:"Default",value:"#FFFFFF"},{name:"BgColor",value:"#6732D1"}]}},title:"@freud-ds/web-components/Forms/Listbox",component:public_api.Qe}),"\n",(0,jsx_runtime.jsx)(header_component.z,{title:"Listbox",description:"Lista suspensa que serve como complemento para outros componentes."}),"\n",(0,jsx_runtime.jsxs)(_components.h2,{id:"import",children:[(0,jsx_runtime.jsx)("a",{id:"importing"}),"Import"]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-ts",children:"import { FreudListboxModule } from '@freud-ds/web-components';\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Listbox requer um valor para vincular e uma coleção de opções."}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<freud-listbox\n  [options]="cities"\n  [(ngModel)]="selectedCity"\n  optionLabel="name"\n></freud-listbox>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-ts",children:"interface City {\n  name: string;\n  code: string;\n}\n\nexport class ListboxDemo {\n  cities: City[];\n\n  selectedCity: City;\n\n  constructor() {\n    this.cities = [\n      { name: 'New York', code: 'NY' },\n      { name: 'Rome', code: 'RM' },\n      { name: 'London', code: 'LDN' },\n      { name: 'Istanbul', code: 'IST' },\n      { name: 'Paris', code: 'PRS' },\n    ];\n  }\n}\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.h2,{id:"exemplos",children:[(0,jsx_runtime.jsx)("a",{id:"exemplos"}),"Exemplos"]}),"\n",(0,jsx_runtime.jsx)("br",{}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default",children:"Default"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:Default})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"filter",children:"Filter"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Utilize a propriedade ",(0,jsx_runtime.jsx)(_components.code,{children:"filter"})," para habilitar um input para filtrar os resultados"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:Filter})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"checkbox",children:"Checkbox"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Utilize as propriedades ",(0,jsx_runtime.jsx)(_components.code,{children:"multiple"})," e ",(0,jsx_runtime.jsx)(_components.code,{children:"checkbox"})," para habilitar a multipla seleção com checkbox"]}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:Checkbox})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"checkbox-and-filter",children:"Checkbox and Filter"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:CheckboxAndFilter})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled",children:"Disabled"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{children:(0,jsx_runtime.jsx)(dist.oG,{story:Disabled})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"bg-color",children:"BG Color"}),"\n",(0,jsx_runtime.jsx)(dist.Xz,{style:{backgroundColor:"#241249"},children:(0,jsx_runtime.jsx)(dist.oG,{story:BGColor})}),"\n",(0,jsx_runtime.jsxs)(_components.h2,{id:"api",children:[(0,jsx_runtime.jsx)("a",{id:"api"}),"API"]}),"\n",(0,jsx_runtime.jsx)(dist.Ed,{of:public_api.Qe})]})}const _Default_=Default,_Filter_=Filter,_Checkbox_=Checkbox,_CheckboxAndFilter_=CheckboxAndFilter,_Disabled_=Disabled,_BGColor_=BGColor,componentMeta={title:"@freud-ds/web-components/Forms/Listbox",parameters:{layout:"centered",backgrounds:{default:"Default",values:[{name:"Default",value:"#FFFFFF"},{name:"BgColor",value:"#6732D1"}]}},decorators:[(0,angular_dist.moduleMetadata)({imports:[public_api.Dv]})],component:public_api.Qe,tags:["stories-mdx"],includeStories:["_Default_","_Filter_","_Checkbox_","_CheckboxAndFilter_","_Disabled_","_BGColor_"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const listbox_stories=componentMeta,listbox_stories_namedExportsOrder=["_Default_","_Filter_","_Checkbox_","_CheckboxAndFilter_","_Disabled_","_BGColor_"]}}]);